-- MySQL Script generated by MySQL Workbench
-- dom 22 nov 2020 20:19:45 WET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `DNI` VARCHAR(9) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Cod. Fidelizacion` INT NOT NULL,
  `Email` VARCHAR(45) NULL,
  `Apellido` VARCHAR(45) NOT NULL,
  `Cliente_DNI` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`DNI`, `Cliente_DNI`),
  INDEX `fk_Cliente_Cliente1_idx` (`Cliente_DNI` ASC),
  CONSTRAINT `fk_Cliente_Cliente1`
    FOREIGN KEY (`Cliente_DNI`)
    REFERENCES `mydb`.`Cliente` (`DNI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Empleado` (
  `DNI` VARCHAR(9) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `NSS` INT NOT NULL,
  PRIMARY KEY (`DNI`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pedido` (
  `Cod. Pedido` INT NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `DNI_cliente` VARCHAR(9) NOT NULL,
  `DNI_empleado` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`Cod. Pedido`),
  INDEX `Cliente_idx` (`DNI_cliente` ASC),
  INDEX `Empleado_idx` (`DNI_empleado` ASC),
  CONSTRAINT `Cliente`
    FOREIGN KEY (`DNI_cliente`)
    REFERENCES `mydb`.`Cliente` (`DNI`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `Empleado`
    FOREIGN KEY (`DNI_empleado`)
    REFERENCES `mydb`.`Empleado` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Productos` (
  `CodBarras` INT NOT NULL,
  `Precio` INT NOT NULL,
  `Tipo` VARCHAR(45) NOT NULL,
  `Stock` INT GENERATED ALWAYS AS (),
  PRIMARY KEY (`CodBarras`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Vivero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Vivero` (
  `Cod. Vivero` INT NOT NULL,
  `Ubicacion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Cod. Vivero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Zona_`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Zona_` (
  `Nombre` VARCHAR(45) NOT NULL,
  `Cod. Vivero` INT NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `Vivero_idx` (`Cod. Vivero` ASC),
  CONSTRAINT `Vivero`
    FOREIGN KEY (`Cod. Vivero`)
    REFERENCES `mydb`.`Vivero` (`Cod. Vivero`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Zona_empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Zona_empleado` (
  `DNI_empleado` VARCHAR(9) NOT NULL,
  `Nombre_zona` VARCHAR(45) NOT NULL,
  `Fecha_ini` DATETIME NOT NULL,
  `Fecha_fin` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`DNI_empleado`, `Nombre_zona`),
  INDEX `Zona_idx` (`Nombre_zona` ASC),
  CONSTRAINT `Empleado`
    FOREIGN KEY (`DNI_empleado`)
    REFERENCES `mydb`.`Empleado` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Zona`
    FOREIGN KEY (`Nombre_zona`)
    REFERENCES `mydb`.`Zona_` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Zona_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Zona_producto` (
  `Cod. Barras` INT NOT NULL,
  `Nombre_zona` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Cod. Barras`, `Nombre_zona`),
  INDEX `Zona_idx` (`Nombre_zona` ASC),
  CONSTRAINT `Producto`
    FOREIGN KEY (`Cod. Barras`)
    REFERENCES `mydb`.`Productos` (`CodBarras`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Zona`
    FOREIGN KEY (`Nombre_zona`)
    REFERENCES `mydb`.`Zona_` (`Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Producto_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Producto_pedido` (
  `CodPedido` INT NOT NULL,
  `CodProducto` INT NOT NULL,
  `Cantidad` INT NOT NULL,
  PRIMARY KEY (`CodPedido`, `CodProducto`),
  INDEX `Producto_idx` (`CodProducto` ASC),
  CONSTRAINT `Pedido`
    FOREIGN KEY (`CodPedido`)
    REFERENCES `mydb`.`Pedido` (`Cod. Pedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Producto`
    FOREIGN KEY (`CodProducto`)
    REFERENCES `mydb`.`Productos` (`CodBarras`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- procedure crear_email
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE crear_email (IN nombre VARCHAR(45), IN apellido VARCHAR(45), IN dominio VARCHAR(45), OUT email VARCHAR(45))
BEGIN
	SET email = CONCAT(nombre,apellido,'@',dominio);
END;$$

DELIMITER ;
USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `viveros`.`Cliente_BEFORE_INSERT` BEFORE INSERT ON `Cliente` FOR EACH ROW
BEGIN
DECLARE email_ VARCHAR(45);
	IF NEW.Email IS NULL THEN
		CALL crear_email(NEW.Nombre,NEW.Apellido,'ull.es',email_);
		SET NEW.Email = email_;
	END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `viveros`.`Producto_pedido_BEFORE_INSERT` BEFORE INSERT ON `Producto_pedido` FOR EACH ROW
BEGIN
SET @stock_ = (SELECT Stock FROM Productos WHERE CodBarras = NEW.CodProducto);
SET @stock_ = (@stock_ - NEW.Cantidad);
IF @stock_ < 0 THEN
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No hay stocj de este producto';
ELSE 
	UPDATE Productos SET Stock = @stock_ WHERE CodBarras = NEW.CodProducto;
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
